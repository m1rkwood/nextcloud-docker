version: "3.7"

services:
  nextcloud:
    build: .
    container_name: nextcloud
    restart: always
    volumes:
      - nextcloud:/var/www/html
      - ${NEXTCLOUD_ROOT}/config:/var/www/html/config
      - ${NEXTCLOUD_ROOT}/custom_apps:/var/www/html/custom_apps
      - ${NEXTCLOUD_ROOT}/themes:/var/www/html/themes
      - ${NEXTCLOUD_ROOT}/data:/var/www/html/data
      - /etc/localtime:/etc/localtime:ro
    depends_on:
      - postgres
      - redis
    environment:
      - POSTGRES_HOST=nextcloud-postgres
      - POSTGRES_DB=nextcloud
      - POSTGRES_USER=nextcloud
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - REDIS_HOST=nextcloud-redis
      - REDIS_HOST_PASSWORD=${REDIS_PASSWORD}
      - TRUSTED_PROXIES=${TRUSTED_PROXIES}
    labels:
      - traefik.enable=true
      - traefik.http.routers.nextcloud.rule=Host(`${SUB_DOMAIN}.${DOMAIN_NAME}`)
      - traefik.http.routers.nextcloud.tls=true
      - traefik.http.routers.nextcloud.tls.certresolver=letsencrypt
      - traefik.http.routers.nextcloud.entrypoints=websecure
      #
      # make calDAV/cardDAV work
      - "traefik.http.middlewares.nextcloud_caldav.redirectregex.permanent=true"
      - "traefik.http.middlewares.nextcloud_caldav.redirectregex.regex=/.well-known/(card|cal)dav"
      - "traefik.http.middlewares.nextcloud_caldav.redirectregex.replacement=/remote.php/dav/"
      #
      # "Strict-Transport-Security" HTTP header
      - "traefik.http.middlewares.nextcloud_headers.headers.stsSeconds=155520011"
      - "traefik.http.middlewares.nextcloud_headers.headers.stsPreload=true"
      - "traefik.http.middlewares.nextcloud_headers.headers.contentSecurityPolicy=frame-ancestors 'self' ${DOMAIN_NAME} *.${DOMAIN_NAME}"
      - "traefik.http.middlewares.nextcloud_headers.headers.stsIncludeSubdomains=true"
      #
      # declare middlewars
      - "traefik.http.routers.nextcloud.middlewares=nextcloud_caldav@docker,nextcloud_headers@docker"
    networks:
      - web
      - internal

  postgres:
    image: postgres:alpine
    container_name: nextcloud-postgres
    restart: always
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - postgres:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=nextcloud
      - POSTGRES_USER=nextcloud
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      #
      # needs to be removed when upgrading to scram authentication
      - POSTGRES_HOST_AUTH_METHOD=md5
    networks:
      - internal

  redis:
    image: redis:alpine
    container_name: nextcloud-redis
    restart: always
    command: redis-server --requirepass ${REDIS_PASSWORD}
    networks:
      - internal

volumes:
  nextcloud:
  postgres:

networks:
  web:
    external: true
  internal:
    external: false
